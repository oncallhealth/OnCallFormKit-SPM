// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name OnCallFormKit
import Foundation
@_exported import OnCallFormKit
import Swift
import SwiftUI
import UIKit
import WebKit
@_hasMissingDesignatedInitializers @available(iOS 13, *)
final public class FormViewerViewController : SwiftUI.UIHostingController<OnCallFormKit.FormViewer> {
  public init(formIds: [Swift.Int], authToken: Swift.String, primaryColour: UIKit.UIColor, onComplete: @escaping (OnCallFormKit.FormViewer.CompletionResult) -> Swift.Void)
  override public init(rootView: OnCallFormKit.FormViewer)
  override public init?(coder aDecoder: Foundation.NSCoder, rootView: OnCallFormKit.FormViewer)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc deinit
}
@available(iOS 13, *)
public struct FormViewer : SwiftUI.View {
  public struct CompletionResult {
    public let numberOfFormsSubmitted: Swift.Int
    public let numberOfFormsSkipped: Swift.Int
  }
  public init(formIds: [Swift.Int], authToken: Swift.String, primaryColour: UIKit.UIColor, onComplete: ((OnCallFormKit.FormViewer.CompletionResult) -> Swift.Void)? = nil)
  public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13OnCallFormKit0C6ViewerV4bodyQrvp", 0) ðŸ¦¸
}
